name: CI (full tests, full gui)

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: checkout alt-integration-cpp
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: veriblock/alt-integration-cpp
          path: alt-integration-cpp
      - name: configure alt-integration-cpp
        run: cd alt-integration-cpp/ && cmake . -Bbuild -DFIND_ROCKSDB=OFF
      - name: make alt-integration-cpp
        run: cd alt-integration-cpp/build && make -j2
      - name: install alt-integration-cpp
        run: cd alt-integration-cpp/build && sudo make install
      - name: checkout
        uses: actions/checkout@v1
        with:
          submodules: true
          path: main
      - name: add bitcoin ppa
        run: sudo add-apt-repository ppa:bitcoin/bitcoin
      - name: install build requirements
        run: sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
      - name: install dependencies
        run: sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libminiupnpc-dev libzmq3-dev libdb4.8-dev libdb4.8++-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libqrencode-dev
      - name: autogen
        run: ./autogen.sh
      - name: configure
        run: ./configure
          --enable-werror
          --disable-bench
          --disable-gmock
#         --enable-lcov
#         --enable-lcov-branch-coverage
      - name: make
        run: make -j2
      - name: make check
        timeout-minutes: 20
        run: make check
#     - name: Collect coverage
#       run: |
#         lcov -c -d src -o cov.info
#         gcovr --xml cov.xml -j2 -v -s -b -r src
#     - name: Run sonarqube
#       run: sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  x86_64-w64-mingw32:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
        with:
          submodules: true
          path: main
      - name: install build requirements
        run: sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git g++-mingw-w64-x86-64
      - name: set the default mingw32 g++ compiler option to posix
        run: sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
      - name: strip out problematic Windows %PATH% imported var
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')
      - name: set host variable and build dependencies for x86_64-w64
        run: cd depends && make -j2 HOST=x86_64-w64-mingw32
      - name: checkout alt-integration-cpp
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: veriblock/alt-integration-cpp
          path: alt-integration-cpp
      - name: configure alt-integration-cpp
        run: cd alt-integration-cpp/ && cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DTESTING=OFF -DFIND_ROCKSDB=OFF -DCMAKE_INSTALL_PREFIX=../depends/x86_64-w64-mingw32/ -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++
      - name: make alt-integration-cpp
        run: cd alt-integration-cpp/build && make -j$(nproc)
      - name: install alt-integration-cpp
        run: cd alt-integration-cpp/build && make install
      - name: autogen
        run: ./autogen.sh
      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/
          --enable-werror
          --disable-bench
          --disable-gmock
      - name: make
        run: make -j2
      - name: make check
        timeout-minutes: 20
        run: make check